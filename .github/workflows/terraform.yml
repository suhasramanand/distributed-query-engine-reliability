name: Terraform Infrastructure Deployment

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'terraform/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'

env:
  AWS_REGION: us-west-2
  TF_VERSION: "1.5.0"

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Terraform Format Check
      working-directory: ./terraform
      run: terraform fmt -check
      
    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init
      
    - name: Terraform Validate
      working-directory: ./terraform
      run: terraform validate
      
    - name: Terraform Plan
      working-directory: ./terraform
      run: |
        terraform plan \
          -var-file=environments/prod/terraform.tfvars \
          -out=tfplan
          
    - name: Upload Terraform Plan
      uses: actions/upload-artifact@v3
      with:
        name: terraform-plan
        path: terraform/tfplan
        
  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Download Terraform Plan
      uses: actions/download-artifact@v3
      with:
        name: terraform-plan
        path: terraform/
        
    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init
      
    - name: Terraform Apply
      working-directory: ./terraform
      run: terraform apply -auto-approve tfplan
      
    - name: Get Cluster Info
      run: |
        aws eks update-kubeconfig --name distributed-query-engine-prod --region ${{ env.AWS_REGION }}
        kubectl get nodes
        kubectl get pods --all-namespaces
        
    - name: Upload Cluster Config
      uses: actions/upload-artifact@v3
      with:
        name: kubeconfig
        path: ~/.kube/config
        
  terraform-destroy:
    name: Terraform Destroy (Manual)
    runs-on: ubuntu-latest
    if: github.event.inputs.destroy == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init
      
    - name: Terraform Destroy
      working-directory: ./terraform
      run: |
        terraform destroy \
          -var-file=environments/prod/terraform.tfvars \
          -auto-approve
